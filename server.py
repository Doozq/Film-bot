# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã.
import logging
import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, MessageHandler, filters, CallbackQueryHandler
from telegram.ext import CommandHandler
from data import db_session
from data.films import Film
from data.chanels import Chanel
from admin import admin_login_handler, admin_menu, admin_logout, admin_add_film_handler, admin_add_advert_handler
from admin import admin_delete_advert_handler
from config import BOT_TOKEN

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)


async def start_command(update, context):
    user = update.effective_user
    await update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç {user.mention_html()}! –Ø –∫–∏–Ω–æ-–±–æ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞, \
–∏ —è –æ—Ç–≤–ø—Ä–∞–≤–ª—é –≤–∞–º –µ–≥–æ –Ω–∞–≤–∑–∞–Ω–∏–µ, –æ–ø–∏—Å–∏–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä",
    )


async def help_command(update, context):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞")


async def code_to_film(update, context):
    user_id = update.effective_user.id

    if 'subscribed' not in context.user_data:
        context.user_data['subscribed'] = False

    if await check_sub_chanels(user_id):
        if context.user_data['subscribed']:
            film = db_sess.query(Film).filter(Film.code == int(update.message.text)).first()
            if film:
                if film.img:
                    await bot.send_photo(chat_id=update.message.chat.id, photo=film.img)
                await update.message.reply_text(f"–ö–æ–¥: {film.code}\n\n"
                                                f"–ù–∞–∑–≤–∞–Ω–∏–µ: {film.name}\n\n"
                                                f"–°–º–æ—Ç—Ä–µ—Ç—å: {film.url}")
            else:
                await update.message.reply_text("–§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            await ask_for_sub(update.message.chat.id)
    else:
        await ask_for_sub(update.message.chat.id)


# –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
async def ask_for_sub(user_id):
    keyboard = []
    for chanel in db_sess.query(Chanel).all():
        keyboard.append([InlineKeyboardButton(chanel.name, callback_data=1, url=chanel.url)])
    keyboard.append([InlineKeyboardButton("‚úÖ–Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø", callback_data=200)])
    reply_markup = InlineKeyboardMarkup(keyboard)
    await bot.send_message(user_id, "–î–ª—è –ë–ï–°–õ–ê–¢–ù–û–ì–û –ø—Ä–æ—Å–º–æ—Ç—Ä–∞\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µüëá\n\
–ò –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \n¬´‚úÖ–Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø¬ª", reply_markup=reply_markup)


async def check_sub_chanels(user_id):
    for chanel in db_sess.query(Chanel).all():
        a = await bot.get_chat_member(chat_id=f'@{chanel.url[13:]}', user_id=user_id)
        if a["status"] == "left":
            return False
    return True


async def button_check_sub(update, context):

    query = update.callback_query

    if query.data == '200':
        print(update.effective_user.id)
        if await check_sub_chanels(update.effective_user.id):
            context.user_data['subscribed'] = True
            await bot.send_message(update.effective_user.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É‚ù§Ô∏è –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ \
–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —Ñ–∏–ª—å–º")

        else:
            await bot.send_message(update.effective_user.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã")
            await ask_for_sub(update.effective_user.id)


def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application.
    application = Application.builder().token(BOT_TOKEN).build()

    # –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∏–ø–∞ filters.TEXT
    text_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, code_to_film)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:

    # –ê–¥–º–∏–Ω-–º–æ–¥
    application.add_handler(admin_login_handler)
    application.add_handler(admin_add_film_handler)
    application.add_handler(admin_add_advert_handler)
    application.add_handler(admin_delete_advert_handler)
    application.add_handler(CommandHandler("admin_menu", admin_menu))
    application.add_handler(CommandHandler("logout", admin_logout))

    # –ö–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))

    # –¢–µ–∫—Å—Ç
    application.add_handler(text_handler)

    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
    application.add_handler(CallbackQueryHandler(button_check_sub))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    bot = telegram.Bot(token=BOT_TOKEN)
    db_session.global_init("db/database.db")
    db_sess = db_session.create_session()
    main()
